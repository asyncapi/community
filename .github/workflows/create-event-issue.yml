name: Create community event issue

on:
  workflow_dispatch:
    inputs:
      time:
        description: 'Info about meeting hour in UTC time zone, like: 8 or 16'
        required: true
      everytimezone:
        description: 'Link that points to specific time when meeting happens so others can translate it to their time zones, like: https://everytimezone.com/s/182f3172'
        required: true
      date:
        description: 'Date in a form like: Tuesday October 26 2021'
        required: true
      type:
        description: 'Is it "sig", "spec3-0" or "lets_talk_contrib" meeting'
        required: true
      descSuffix:
        description: 'You can specify additional text that appears at the end of generated event title, like: - Product Design'
        required: false
        default: ''

jobs:

  setup-sig-meeting:
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    name: Setup SIG meeting
    runs-on: ubuntu-latest
    if: github.event.inputs.type == 'sig'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create issue content
        uses: actions/github-script@v4
        with:
          script: |
            const { writeFileSync } = require('fs');
            const { getMeetingIssueContent } = require('./.github/workflows/event_issue_templates/sig.js');

            const issueContent =  getMeetingIssueContent('${{ github.event.inputs.time }}', '${{ github.event.inputs.everytimezone }}');

            writeFileSync('content.md', issueContent, { encoding: 'utf8'});
      - name: Create issue with meeting details
        run: gh issue create -l meeting -t "Community SIG Meeting, ${{ github.event.inputs.time }} UTC ${{ github.event.inputs.date }} ${{ github.event.inputs.descSuffix }}" -F content.md

  setup-lets-talk-about-contrib-stream:
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    name: Setup Lets talk about contributing live stream
    runs-on: ubuntu-latest
    if: github.event.inputs.type == 'lets_talk_contrib'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create issue content
        uses: actions/github-script@v4
        with:
          script: |
            const { writeFileSync } = require('fs');
            const { getMeetingIssueContent } = require('./.github/workflows/event_issue_templates/contributor-first.js');

            const issueContent =  getMeetingIssueContent('${{ github.event.inputs.time }}', '${{ github.event.inputs.everytimezone }}');

            writeFileSync('content.md', issueContent, { encoding: 'utf8'});
      - name: Create issue with meeting details
        run: gh issue create -l meeting -t "Let's talk about contributing, ${{ github.event.inputs.time }} UTC ${{ github.event.inputs.date }} ${{ github.event.inputs.descSuffix }}" -F content.md

  setup-spec-3-0-meeting:
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    name: Setup meeting about 3.0 spec work
    runs-on: ubuntu-latest
    if: github.event.inputs.type == 'spec3-0'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create issue content
        uses: actions/github-script@v4
        with:
          script: |
            const { writeFileSync } = require('fs');
            const { getMeetingIssueContent } = require('./.github/workflows/event_issue_templates/spec-3-0.js');

            const issueContent =  getMeetingIssueContent('${{ github.event.inputs.time }}', '${{ github.event.inputs.everytimezone }}');

            writeFileSync('content.md', issueContent, { encoding: 'utf8'});
      - name: Create issue with meeting details
        run: gh issue create -l meeting -t "Spec 3.0 Meeting, ${{ github.event.inputs.time }} UTC ${{ github.event.inputs.date }} ${{ github.event.inputs.descSuffix }}" -F content.md
